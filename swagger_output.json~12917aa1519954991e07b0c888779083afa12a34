{
  "swagger": "2.0",
  "info": {
    "title": "Unitomo VA Payment",
    "description": "Ini adalah dokumentasi api untuk aplikasi VA Universitas Dr. Soetomo Fakultas Teknik",
    "version": "1.0.0"
  },
  "host": "localhost:5000",
  "basePath": "/v1",
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to fetch all users",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to createUser",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRequestFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Endpoint untuk mengUpdate Data User",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserRequestFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/data": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to fetch user data by token",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/get-user-by-nim/{nim}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get user by NIM",
        "parameters": [
          {
            "name": "nim",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/resend-verification": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint untuk mengirim ulang OTP",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/verification/{otp}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to verifikasi OTP user",
        "parameters": [
          {
            "name": "otp",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/user/forgot-password": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint untuk mengirim request lupa password",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForgotPasswordRequestFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/user/reset-password": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint untuk mereset password",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordRequestFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/user/change-password": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint untuk mengUpdate password User",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "User information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePasswordRequestFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to delete user by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to Login",
        "parameters": [
          {
            "name": "login",
            "in": "body",
            "description": "Data Login.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequestFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/user/foto-profil/{id}": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "Endpoint untuk mengUpdate Foto Profil User",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "file",
            "type": "file",
            "in": "formData",
            "description": "Foto profil user.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/va": {
      "get": {
        "tags": [
          "VAHistory"
        ],
        "description": "Endpoint to get va history",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "VAHistory"
        ],
        "description": "Endpoint to insert va history",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "VAHistory",
            "in": "body",
            "description": "Payment information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VAHistoryRequestFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/va/{id}": {
      "get": {
        "tags": [
          "VAHistory"
        ],
        "description": "Endpoint to get va history",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "VAHistory"
        ],
        "description": "Endpoint to delete va by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/prodi": {
      "get": {
        "tags": [
          "MProdi"
        ],
        "description": "Endpoint to get all master prodi",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/paycode": {
      "get": {
        "tags": [
          "MKodePay"
        ],
        "description": "Endpoint to get all master prodi",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "UserRequestFormat": {
      "type": "object",
      "properties": {
        "nim": {
          "type": "string",
          "example": ""
        },
        "nama": {
          "type": "string",
          "example": ""
        },
        "prodi": {
          "type": "string",
          "example": ""
        },
        "no_hp": {
          "type": "string",
          "example": ""
        },
        "email": {
          "type": "string",
          "example": ""
        },
        "password": {
          "type": "string",
          "example": ""
        }
      },
      "required": [
        "nim",
        "nama",
        "prodi",
        "no_hp",
        "email",
        "password"
      ]
    },
    "UpdateUserRequestFormat": {
      "type": "object",
      "properties": {
        "nim": {
          "type": "string",
          "example": ""
        },
        "nama": {
          "type": "string",
          "example": ""
        },
        "prodi": {
          "type": "string",
          "example": ""
        },
        "no_hp": {
          "type": "string",
          "example": ""
        },
        "email": {
          "type": "string",
          "example": ""
        }
      },
      "required": [
        "nim",
        "nama",
        "prodi",
        "no_hp",
        "email"
      ]
    },
    "LoginRequestFormat": {
      "type": "object",
      "properties": {
        "nim": {
          "type": "string",
          "example": ""
        },
        "password": {
          "type": "string",
          "example": ""
        }
      },
      "required": [
        "nim",
        "password"
      ]
    },
    "UpdatePasswordRequestFormat": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "example": ""
        },
        "new_password": {
          "type": "string",
          "example": ""
        }
      },
      "required": [
        "password",
        "new_password"
      ]
    },
    "VAHistoryRequestFormat": {
      "type": "object",
      "properties": {
        "va": {
          "type": "string",
          "example": ""
        },
        "payment_category": {
          "type": "string",
          "example": ""
        },
        "nominal": {
          "type": "number",
          "example": 0
        },
        "parsial": {
          "type": "boolean",
          "example": false
        }
      },
      "required": [
        "va",
        "payment_category",
        "nominal",
        "parsial"
      ]
    },
    "ForgotPasswordRequestFormat": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": ""
        }
      },
      "required": [
        "email"
      ]
    },
    "ResetPasswordRequestFormat": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": ""
        },
        "otp": {
          "type": "string",
          "example": ""
        },
        "password": {
          "type": "string",
          "example": ""
        }
      },
      "required": [
        "email",
        "otp",
        "password"
      ]
    }
  }
}